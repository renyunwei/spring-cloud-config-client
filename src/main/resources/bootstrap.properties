####
#{application}、{profile}等springcloud相关的属性必须配置在bootstrap.properties中，config部分内容才能被正确加载。
#因为config相关的而配置会优先于application.properties，而bootstrap.properties的加载也是优先于application.properties


spring.cloud.config.name=didispace

#对应{profile} 部分
spring.cloud.config.profile=dev

#配置中心的具体位置
spring.cloud.config.uri= http://localhost:7001/

#对应Git的分支。如果配置中心使用的是本地存储，则该参数无用
spring.cloud.config.label=master

#指定配置中心的service-id,便于扩展为高可用配置集群
#spring.cloud.config.discovery.server-id=***

#直接通过配置中心获取配置；当配置中心不可用时，可设置为true使用缓存在本地的配置文件启动应用
spring.cloud.config.localcache.load=true

#定义本地缓存文件生成的目录和名称
spring.cloud.config.localcache.path=H://STS/workSpace_boot/config-server-cache/remoteConfigBackup.properties

#此参数用于权限校验，值为Git的private token
#如无此参数或无权限将拒绝获取配置文件。Base64加密，部分JDK1.7 可能不支持Base64编码，引入 commons-codec依赖包
#spring.cloud.confog.password=${SPRING_CLOUD_CONFIG_PASSWORD}